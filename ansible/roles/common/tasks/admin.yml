---
- name: "Ensure admin group exists"
  ansible.builtin.group:
    name: "{{ admin_group }}"
    gid: "{{ admin_gid | default(omit) }}"
    state: present
  become: true

- name: "Ensure admin user exists"
  ansible.builtin.user:
    name: "{{ admin_user }}"
    uid: "{{ admin_uid | default(omit) }}"
    group: "{{ admin_group }}"
    groups: "{{ admin_extra_groups | default([]) }}"
    append: true
    create_home: true
    update_password: always
    password: "{{ encrypt_pass }}"
    shell: "{{ admin_shell }}"
    state: present
  become: true
  notify: Reset connection

#- name: Relabel ~/ per fcontext rules
#  command: restorecon -RFv "{{ admin_home }}"
#  when:
#    - ansible_selinux is defined
#    - ansible_selinux.status in ['enforcing','permissive']

- name: "Ensure .ssh directory"
  ansible.builtin.file:
    path: "{{ admin_home }}/.ssh"
    state: directory
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"
    mode: "0700"
    seuser: unconfined_u
    setype: ssh_home_t
  become: true

- name: "Install authorized_keys for {{ admin_user }}"
  ansible.builtin.authorized_key:
    user: "{{ admin_user }}"
    key: "{{ item }}"
    state: present
    manage_dir: false
    path: "{{ admin_home }}/.ssh/authorized_keys"
  loop: "{{ admin_authorized_keys }}"
  become: true
#  notify: Reload sshd

- name: "Tighten authorized_keys perms"
  ansible.builtin.file:
    path: "{{ admin_home }}/.ssh/authorized_keys"
    state: file
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"
    mode: "0600"
    seuser: unconfined_u
    setype: ssh_home_t
  when: admin_authorized_keys | length > 0
  become: true

